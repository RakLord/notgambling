(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(n){if(n.ep)return;n.ep=!0;const o=e(n);fetch(n.href,o)}})();const l={metaCard:{id:"metaCard",name:"Meta Card",rarity:0,description:"A card about cards",tooltip:"Provides +1 card per pack"},powerCard:{id:"powerCard",name:"Power Card",rarity:0,description:"The card overflows with power",tooltip:"Increases your card opening power"}};function p(){console.log("UI Setup"),game.tabs.addTab("collectionTab","Collection"),game.tabs.addTab("packsTab","Packs"),game.tabs.addTab("shopTab","Shop"),game.tabs.addTab("settingsTab","Settings"),b(),game.tabs.unlockTab("collectionTab"),game.tabs.unlockTab("packsTab"),game.tabs.unlockTab("settingsTab"),game.tabs.switchTab("packsTab")}function h(){const a=document.getElementById("scoreText");a.innerText=`Points: ${game.points}`}function m(a){console.log(a);const t=document.getElementById("cardContainer"),e=document.createElement("div");e.id=a.id,e.classList.add("card");const s=`/notgambling/assets/cards/${a.id}.jpg`;e.innerHTML=`
    <img src="${s}" alt="${a.name}" />
    <h2>${a.name}</h2>
    <p>${a.description}</p>
  `,t.appendChild(e)}function b(){console.log("Setting up tabs");const a=document.getElementById("packsTab");if(a){const s=document.createElement("div");s.id="currentPackContainer",a.appendChild(s);const n=document.createElement("div");n.id="packSelectionContainer",a.appendChild(n);const o=document.createElement("button");o.id="openPackButton",o.innerText="Open Pack",o.addEventListener("click",()=>game.openPack()),s.appendChild(o)}const t=document.createElement("div");t.id="packModal",t.classList.add("hidden"),t.innerHTML=`
    <div id="packContent">
      <div id="cardDisplay"></div>
      <div id="packControls">
        <button id="keepCardButton">Keep</button>
        <button id="sellCardButton">Sell</button>
      </div>
    </div>
  `,document.body.appendChild(t);const e=document.getElementById("collectionTab");if(e){const s=document.createElement("div");s.id="cardContainer",e.appendChild(s)}}class g{constructor(t){this.name=t,this.unlocked=!1}show(){const t=document.getElementById(this.name);t&&(t.classList.remove("hidden"),t.classList.add("shown"))}hide(){const t=document.getElementById(this.name);t&&(t.classList.remove("shown"),t.classList.add("hidden"))}}class C{constructor(){this.tabs={},this.currentTab=null}addTab(t,e){if(!this.tabs[t]){this.tabs[t]=new g(t);const s=document.getElementById("currentTabContainer"),n=document.createElement("div");n.id=t,n.classList.add("hidden"),s.appendChild(n);const o=document.getElementById("sideNavContainer"),i=document.createElement("button");i.id=`${t}TabButton`,i.innerText=e||t,i.classList.add("hidden"),i.addEventListener("click",()=>this.switchTab(t)),o.appendChild(i)}}unlockTab(t){if(this.tabs[t]){this.tabs[t].unlocked=!0;const e=document.getElementById(`${t}TabButton`);e&&e.classList.remove("hidden")}}switchTab(t){console.log(`Switching tab to: ${t}`),this.tabs[t]&&this.tabs[t].unlocked&&(this.currentTab&&this.tabs[this.currentTab].hide(),this.tabs[t].show(),this.currentTab=t)}}class T{constructor(t,e,s,n,o,i=1){this.id=t,this.name=e,this.rarity=s,this.description=n,this.tooltip=o,this.quantity=i}}class f{constructor(){this.ownedCards={},this.points=10,this.intervalDelay=1e3,this.loopInterval=null,this.tabs=new C}init(){p(),this.points=10,this.addCardToOwned("metaCard"),this.startGameLoop()}startGameLoop(){this.loopInterval=setInterval(()=>{this.update()},this.intervalDelay)}stopGameLoop(){this.loopInterval&&clearInterval(this.loopInterval)}update(){h()}addCardToOwned(t){if(this.ownedCards[t])this.ownedCards[t].quantity++;else{const e=l[t];this.ownedCards[t]=new T(e.id,e.name,e.rarity,e.description,e.tooltip,1),m(this.ownedCards[t])}console.log(`Added ${t} to owned cards:`,this.ownedCards[t])}calculateCardsPerPack(){return this.ownedCards.metaCard.quantity}openPack(){const t=this.calculateCardsPerPack(),e=[];for(let s=0;s<t;s++)e.push(l.metaCard);this.displayPackModal(e)}displayPackModal(t){const e=document.getElementById("packModal"),s=document.getElementById("cardDisplay"),n=document.getElementById("keepCardButton"),o=document.getElementById("sellCardButton");let i=0;e.classList.remove("hidden");const c=()=>{const d=t[i];s.innerHTML=`
        <div class="card">
          <img src="/notgambling/assets/cards/${d.id}.jpg" alt="${d.name}" />
          <h2>${d.name}</h2>
          <p>${d.description}</p>
        </div>
      `};c(),n.onclick=()=>{this.addCardToOwned(t[i].id),r()},o.onclick=()=>{this.points+=10,r()};const r=()=>{i++,i<t.length?c():u()},u=()=>{e.classList.add("hidden"),s.innerHTML=""}}}document.addEventListener("DOMContentLoaded",function(a){window.game=new f,game.init()});
