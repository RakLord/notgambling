(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const o of a)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function e(a){const o={};return a.integrity&&(o.integrity=a.integrity),a.referrerPolicy&&(o.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?o.credentials="include":a.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(a){if(a.ep)return;a.ep=!0;const o=e(a);fetch(a.href,o)}})();const l=[{name:"normal",min:0,max:10},{name:"uncommon",min:11,max:100},{name:"rare",min:101,max:999},{name:"super rare",min:1e3,max:9999},{name:"ultra-rare",min:1e4,max:1e6},{name:"mythic",min:1e6,max:1e9},{name:"phantom",min:1e11,max:1e16},{name:"ününün",min:1e99,max:1e128}],u={metaCard:{id:"metaCard",name:"Meta Card",rarity:0,description:"A card about cards",tooltip:"Provides +1 card per pack"},powerCard:{id:"powerCard",name:"Power Card",rarity:0,description:"The card overflows with power",tooltip:"Increases your card opening power"},moreCats:{id:"moreCats",name:"More Cats",rarity:101,description:"Who doesnt want more cats?!",tooltip:"nah this doesnt actually do anything yet :D"}};function p(){console.log("UI Setup"),game.tabs.addTab("collectionTab","Collection"),game.tabs.addTab("packsTab","Packs"),game.tabs.addTab("shopTab","Shop"),game.tabs.addTab("settingsTab","Settings"),b(),game.tabs.unlockTab("collectionTab"),game.tabs.unlockTab("packsTab"),game.tabs.unlockTab("settingsTab"),game.tabs.switchTab("packsTab")}function h(){const i=document.getElementById("scoreText");i.innerText=`Points: ${game.playerPoints}`}function y(i){console.log(i);const t=document.getElementById("cardContainer");let e=document.getElementById(i.id);if(e){const n=e.querySelector(".quantity-overlay");n&&(n.innerText=i.quantity)}else{e=document.createElement("div"),e.id=i.id,e.classList.add("card");const n=`/notgambling/assets/cards/${i.id}.jpg`;e.innerHTML=`
      <div class="quantity-overlay">${i.quantity}</div>
      <img src="${n}" alt="${i.name}" />
      <h2>${i.name}</h2>
      <p>${i.description}</p>
    `,t.appendChild(e)}}function b(){console.log("Setting up tabs");const i=document.getElementById("packsTab");if(i){const n=document.createElement("div");n.id="currentPackContainer",i.appendChild(n);const a=document.createElement("div");a.id="packSelectionContainer",i.appendChild(a);const o=document.createElement("button");o.id="openPackButton",o.innerText="Open Pack",o.addEventListener("click",()=>game.openPack()),n.appendChild(o)}const t=document.createElement("div");t.id="packModal",t.classList.add("hidden"),t.innerHTML=`
    <div id="packContent">
      <div id="cardDisplay"></div>
      <div id="packControls">
        <button id="keepCardButton">Keep</button>
        <button id="sellCardButton">Sell</button>
      </div>
    </div>
  `,document.body.appendChild(t);const e=document.getElementById("collectionTab");if(e){const n=document.createElement("div");n.id="cardContainer",e.appendChild(n)}}class g{constructor(t){this.name=t,this.unlocked=!1}show(){const t=document.getElementById(this.name);t&&(t.classList.remove("hidden"),t.classList.add("shown"))}hide(){const t=document.getElementById(this.name);t&&(t.classList.remove("shown"),t.classList.add("hidden"))}}class C{constructor(){this.tabs={},this.currentTab=null}addTab(t,e){if(!this.tabs[t]){this.tabs[t]=new g(t);const n=document.getElementById("currentTabContainer"),a=document.createElement("div");a.id=t,a.classList.add("hidden"),n.appendChild(a);const o=document.getElementById("sideNavContainer"),s=document.createElement("button");s.id=`${t}TabButton`,s.innerText=e||t,s.classList.add("hidden"),s.addEventListener("click",()=>this.switchTab(t)),o.appendChild(s)}}unlockTab(t){if(this.tabs[t]){this.tabs[t].unlocked=!0;const e=document.getElementById(`${t}TabButton`);e&&e.classList.remove("hidden")}}switchTab(t){console.log(`Switching tab to: ${t}`),this.tabs[t]&&this.tabs[t].unlocked&&(this.currentTab&&this.tabs[this.currentTab].hide(),this.tabs[t].show(),this.currentTab=t)}}class f{constructor(t,e,n,a,o,s=1){this.id=t,this.name=e,this.rarity=n,this.description=a,this.tooltip=o,this.quantity=s}}class k{constructor(){this.ownedCards={},this.intervalDelay=1e3,this.loopInterval=null,this.tabs=new C,this.playerPoints=0,this.playerCardsPerPack=0,this.playerLuckFactor=0}init(){p(),this.startGameLoop()}startGameLoop(){this.loopInterval=setInterval(()=>{this.update()},this.intervalDelay)}stopGameLoop(){this.loopInterval&&clearInterval(this.loopInterval)}update(){h()}addCardToOwned(t){if(this.ownedCards[t]){this.ownedCards[t].quantity++;const e=document.getElementById(t);if(e){const n=e.querySelector(".quantity-overlay");n&&(n.innerText=this.ownedCards[t].quantity)}}else{const e=u[t];this.ownedCards[t]=new f(e.id,e.name,e.rarity,e.description,e.tooltip,1),y(this.ownedCards[t])}console.log(`Added ${t} to owned cards:`,this.ownedCards[t])}calculateCardsPerPack(){var n;let t=1,e=((n=this.ownedCards.metaCard)==null?void 0:n.quantity)||0;return e>0&&(t+=Math.log(e)),t}calculateLuck(){var n;return 0+(((n=this.ownedCards.powerCard)==null?void 0:n.quantity)||0)}rollForRarity(){const t=Math.random()*(1+this.playerLuckFactor);for(let e of l)if(t>=e.min&&t<=e.max)return e.name;return"normal"}getRandomCardByRarity(t){const e=Object.values(u).filter(n=>{const a=l.find(o=>n.rarity>=o.min&&n.rarity<=o.max);return(a==null?void 0:a.name)===t});if(e.length>0){const n=Math.floor(Math.random()*e.length);return e[n]}return null}generatePack(){console.log("generating pack"),this.playerCardsPerPack=this.calculateCardsPerPack(),this.playerLuckFactor=this.calculateLuck();const t=[];for(let e=0;e<this.playerCardsPerPack;e++){const n=this.rollForRarity(),a=this.getRandomCardByRarity(n);a&&t.push(a)}return t}openPack(){console.log("opening pack");const t=this.generatePack();this.displayPackModal(t)}displayPackModal(t){const e=document.getElementById("packModal"),n=document.getElementById("cardDisplay"),a=document.getElementById("keepCardButton"),o=document.getElementById("sellCardButton");let s=0;e.classList.remove("hidden");const d=()=>{const r=t[s];n.innerHTML=`
        <div class="card">
          <img src="/notgambling/assets/cards/${r.id}.jpg" alt="${r.name}" />
          <h2>${r.name}</h2>
          <p>${r.description}</p>
        </div>
      `};d(),a.onclick=()=>{this.addCardToOwned(t[s].id),c()},o.onclick=()=>{this.points+=10,c()};const c=()=>{s++,s<t.length?d():m()},m=()=>{e.classList.add("hidden"),n.innerHTML=""}}}document.addEventListener("DOMContentLoaded",function(i){window.game=new k,game.init()});
