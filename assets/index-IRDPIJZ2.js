(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const u=[{name:"normal",min:0,max:10},{name:"uncommon",min:11,max:100},{name:"rare",min:101,max:999},{name:"super rare",min:1e3,max:9999},{name:"ultra-rare",min:1e4,max:1e6},{name:"mythic",min:1e6,max:1e9},{name:"phantom",min:1e11,max:1e16},{name:"ününün",min:1e99,max:1e128}],m={metaCard:{id:"metaCard",name:"Meta Card",rarity:0,description:"A card about cards",tooltip:"Provides +1 card per pack"},powerCard:{id:"powerCard",name:"Power Card",rarity:0,description:"The card overflows with power",tooltip:"Increases your card opening power"},moreCats:{id:"moreCats",name:"More Cats",rarity:101,description:"Who doesnt want more cats?!",tooltip:"nah this doesnt actually do anything yet :D"}};function p(o,e){const t=document.getElementById("infoContainer");t.querySelector(`#${o}`).querySelector(".value").innerText=e}function g(){console.log("UI Setup");const o=document.getElementById("leftPane"),e=document.createElement("div");e.id="infoContainer",o.appendChild(e);function t(n,i,s="0"){const r=document.createElement("div");r.classList.add("infoContainerItem"),r.id=n;const d=document.createElement("p");d.classList.add("key"),d.innerText=i,r.appendChild(d);const c=document.createElement("p");return c.classList.add("value"),c.innerText=s,r.appendChild(c),r}e.appendChild(t("statPoints","Points: ")),e.appendChild(t("statLuck","Luck: "));const a=document.createElement("div");a.id="sideNavContainer",o.appendChild(a),game.tabs.addTab("collectionTab","Collection"),game.tabs.addTab("packsTab","Packs"),game.tabs.addTab("shopTab","Shop"),game.tabs.addTab("settingsTab","Settings"),v(),game.tabs.unlockTab("collectionTab"),game.tabs.unlockTab("packsTab"),game.tabs.unlockTab("settingsTab"),game.tabs.switchTab("packsTab")}function C(){p("statPoints",game.playerPoints),p("statLuck",game.playerLuckFactor)}function h(o){console.log(o);const e=document.getElementById("cardContainer");let t=document.getElementById(o.id);if(t){const a=t.querySelector(".quantity-overlay");a&&(a.innerText=o.quantity)}else{t=document.createElement("div"),t.id=o.id,t.classList.add("card");const a=`/notgambling/assets/cards/${o.id}.jpg`;t.innerHTML=`
      <div class="quantity-overlay">${o.quantity}</div>
      <img src="${a}" alt="${o.name}" />
      <h2>${o.name}</h2>
      <p>${o.description}</p>
    `,e.appendChild(t)}}function v(){console.log("Setting up tabs");const o=document.getElementById("packsTab");if(o){const n=document.createElement("div");n.id="currentPackContainer",o.appendChild(n);const i=document.createElement("div");i.id="packSelectionContainer",o.appendChild(i);const s=document.createElement("button");s.id="openPackButton",s.innerText="Open Pack",s.addEventListener("click",()=>game.openPack()),n.appendChild(s)}const e=document.createElement("div");e.id="packModal",e.classList.add("hidden"),e.innerHTML=`
    <div id="packContent">
      <div id="cardDisplay"></div>
      <div id="packControls">
        <button id="keepCardButton">Keep</button>
        <button id="sellCardButton">Sell</button>
      </div>
    </div>
  `,document.body.appendChild(e);const t=document.getElementById("collectionTab");if(t){const n=document.createElement("div");n.id="cardContainer",t.appendChild(n)}const a=document.getElementById("settingsTab");if(a){const n=document.createElement("div");n.id="settingsButtonsContainer";const i=document.createElement("button"),s=document.createElement("button"),r=document.createElement("button");i.innerText="Save Game",s.innerText="Load Game",r.innerText="Hard Reset",i.id="saveButton",s.id="loadButton",r.id="resetButton",i.addEventListener("click",()=>game.save()),s.addEventListener("click",()=>game.load()),r.addEventListener("click",()=>game.reset()),n.appendChild(i),n.appendChild(s),n.appendChild(r),a.appendChild(n)}}class b{constructor(e){this.name=e,this.unlocked=!1}show(){const e=document.getElementById(this.name);e&&(e.classList.remove("hidden"),e.classList.add("shown"))}hide(){const e=document.getElementById(this.name);e&&(e.classList.remove("shown"),e.classList.add("hidden"))}}class f{constructor(){this.tabs={},this.currentTab=null}addTab(e,t){if(!this.tabs[e]){this.tabs[e]=new b(e);const a=document.getElementById("currentTabContainer"),n=document.createElement("div");n.id=e,n.classList.add("hidden"),a.appendChild(n);const i=document.getElementById("sideNavContainer"),s=document.createElement("button");s.id=`${e}TabButton`,s.innerText=t||e,s.classList.add("hidden"),s.addEventListener("click",()=>this.switchTab(e)),i.appendChild(s)}}unlockTab(e){if(this.tabs[e]){this.tabs[e].unlocked=!0;const t=document.getElementById(`${e}TabButton`);t&&t.classList.remove("hidden")}}switchTab(e){console.log(`Switching tab to: ${e}`),this.tabs[e]&&this.tabs[e].unlocked&&(this.currentTab&&this.tabs[this.currentTab].hide(),this.tabs[e].show(),this.currentTab=e)}}function k(o){try{const e={ownedCards:o.ownedCards,playerPoints:o.playerPoints};localStorage.setItem("notgambling-save",JSON.stringify(e)),console.log("Game saved")}catch(e){console.error("Save no save: ",e)}}function T(o){try{const e=JSON.parse(localStorage.getItem("notgambling-save"));if(!e){console.log("No save found");return}o.ownedCards={};for(let t in e.ownedCards){let a=e.ownedCards[t];o.ownedCards[t]=new y(a.id,a.name,a.rarity,a.description,a.tooltip,a.quantity),h(o.ownedCards[t])}o.playerPoints=e.playerPoints,o.calculatePlayerStats(),console.log("Save loaded")}catch(e){console.error("Oh no, save no loady: ",e)}}function w(o){try{localStorage.getItem("notgambling-save")&&(localStorage.removeItem("notgambling-save"),window.location.reload())}catch(e){console.error(`How have you managed to fail to delete a save?!?!
Error: `,e)}}class y{constructor(e,t,a,n,i,s=1){this.id=e,this.name=t,this.rarity=a,this.description=n,this.tooltip=i,this.quantity=s}}class E{constructor(){this.ownedCards={},this.intervalDelay=1e3,this.loopInterval=null,this.tabs=new f,this.playerPoints=0,this.playerCardsPerPack=0,this.playerLuckFactor=0}init(){g(),this.load(),this.startGameLoop()}load(){T(this)}save(){k(this)}reset(){const e=confirm(`Are you sure you want to do this.
This will delete your save file completely?

Click OK to DELETE save`);console.log(e),e?w():alert(`Ok, no save deletion for you


coward`)}startGameLoop(){this.loopInterval=setInterval(()=>{this.update()},this.intervalDelay)}stopGameLoop(){this.loopInterval&&clearInterval(this.loopInterval)}update(){C()}calculatePlayerStats(){this.playerCardsPerPack=this.calculateCardsPerPack(),this.playerLuckFactor=this.calculateLuck()}addCardToOwned(e){if(this.ownedCards[e]){this.ownedCards[e].quantity++;const t=document.getElementById(e);if(t){const a=t.querySelector(".quantity-overlay");a&&(a.innerText=this.ownedCards[e].quantity)}}else{const t=m[e];this.ownedCards[e]=new y(t.id,t.name,t.rarity,t.description,t.tooltip,1),h(this.ownedCards[e])}console.log(`Added ${e} to owned cards:`,this.ownedCards[e])}calculateCardsPerPack(){var a;let e=1,t=((a=this.ownedCards.metaCard)==null?void 0:a.quantity)||0;return t>0&&(e+=Math.log(t)),e}calculateLuck(){var a;return 0+(((a=this.ownedCards.powerCard)==null?void 0:a.quantity)||0)}rollForRarity(){const e=Math.random()*(1+this.playerLuckFactor);for(let t of u)if(e>=t.min&&e<=t.max)return t.name;return"normal"}getRandomCardByRarity(e){const t=Object.values(m).filter(a=>{const n=u.find(i=>a.rarity>=i.min&&a.rarity<=i.max);return(n==null?void 0:n.name)===e});if(t.length>0){const a=Math.floor(Math.random()*t.length);return t[a]}return null}generatePack(){console.log("generating pack"),this.calculatePlayerStats();const e=[];for(let t=0;t<this.playerCardsPerPack;t++){const a=this.rollForRarity(),n=this.getRandomCardByRarity(a);n&&e.push(n)}return e}openPack(){console.log("opening pack");const e=this.generatePack();this.displayPackModal(e)}displayPackModal(e){const t=document.getElementById("packModal"),a=document.getElementById("cardDisplay"),n=document.getElementById("keepCardButton"),i=document.getElementById("sellCardButton");let s=0;t.classList.remove("hidden");const r=()=>{const l=e[s];a.innerHTML=`
        <div class="card">
          <img src="/notgambling/assets/cards/${l.id}.jpg" alt="${l.name}" />
          <h2>${l.name}</h2>
          <p>${l.description}</p>
        </div>
      `};r(),n.onclick=()=>{this.addCardToOwned(e[s].id),d()},i.onclick=()=>{this.points+=10,d()};const d=()=>{s++,s<e.length?r():c()},c=()=>{t.classList.add("hidden"),a.innerHTML=""}}}document.addEventListener("DOMContentLoaded",function(o){window.game=new E,game.init()});
