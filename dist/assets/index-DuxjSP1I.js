(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const a={metaCard:{id:"metaCard",name:"Meta Card",rarity:0,description:"A card about cards",tooltip:"Provides +1 card per pack"},powerCard:{id:"powerCard",name:"Power Card",rarity:0,description:"The card overflows with power",tooltip:"Increases your card opening power"}};function d(){console.log("UI Setup")}function c(){const n=document.getElementById("scoreText");n.innerText=`Points: ${game.points}`}function l(n){console.log(n);const t=document.getElementById("cardContainer"),o=document.createElement("div");o.id=n.id,o.classList.add("card");const i=`/assets/cards/${n.id}.jpg`;o.innerHTML=`
    <img src="${i}" alt="${n.name}" />
    <h2>${n.name}</h2>
    <p>${n.description}</p>
  `,t.appendChild(o)}class p{constructor(t,o,i,e,r,s=1){this.id=t,this.name=o,this.rarity=i,this.description=e,this.tooltip=r,this.quantity=s}}class u{constructor(){this.ownedCards={},this.points=10,this.intervalDelay=1e3,this.loopInterval=null}init(){this.points=10,this.addCardToOwned("metaCard"),document.getElementById("packBtn").addEventListener("click",this.openPack.bind(this)),this.startGameLoop()}startGameLoop(){this.loopInterval=setInterval(()=>{this.update()},this.intervalDelay)}stopGameLoop(){this.loopInterval&&clearInterval(this.loopInterval)}update(){c()}addCardToOwned(t){if(this.ownedCards[t])this.ownedCards[t].quantity++;else{const o=a[t];this.ownedCards[t]=new p(o.id,o.name,o.rarity,o.description,o.tooltip,1),l(this.ownedCards[t])}console.log(`Added ${t} to owned cards:`,this.ownedCards[t])}calculateCardsPerPack(){return this.ownedCards.metaCard.quantity}openPack(){this.calculateCardsPerPack(),this.addCardToOwned("metaCard")}}document.addEventListener("DOMContentLoaded",function(n){window.game=new u,game.init(),d()});
